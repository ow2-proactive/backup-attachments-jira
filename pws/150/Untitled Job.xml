<?xml version="1.0" encoding="UTF-8"?>
<job
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:proactive:jobdescriptor:3.2"
     xsi:schemaLocation="urn:proactive:jobdescriptor:3.2 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.2/schedulerjob.xsd"
    name="Untitled Job" 
    priority="normal"
    cancelJobOnError="false">
  <description>
    <![CDATA[ A task that has two tasks dependencies, therefore it will be executed after the two first tasks finish.
        The two first tasks can run in parallel if enough resources are available. ]]>
  </description>
  <taskFlow>
    <task name="a_task">
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
result = "Hello";
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
    <task name="another_task">
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
result = "World";
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
    <task name="dependent_task">
      <depends>
        <task ref="a_task"/>
        <task ref="another_task"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
print(results[0])
print(results[1])
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
    <task name="Condition">
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
print('I will run a script to select a branch')
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <if target="If"
        else="Else"
        continuation="Continuation">
          <script>
            <code language="javascript">
              <![CDATA[
if(java.lang.System.getProperty('os.name').toLowerCase().contains("win")){
    branch = "if";
} else {
    branch = "else";
}
]]>
            </code>
          </script>
        </if>
      </controlFlow>
    </task>
    <task name="If">
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
print('I am running on Windows in the If branch')
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
    <task name="Else">
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
print('I am running on Linux in the If branch')
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
    <task name="Continuation">
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
print('I am ran after the If or the Else task')
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
    <task name="Start">
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
print('Loop block start ' + java.lang.System.getProperty('pas.task.iteration'))
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow block="start"></controlFlow>
    </task>
    <task name="Loop">
      <depends>
        <task ref="Start"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="javascript">
            <![CDATA[
print('Loop block end ' + java.lang.System.getProperty('pas.task.iteration'))
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow  block="end">
        <loop target="Start">
          <script>
            <code language="javascript">
              <![CDATA[
if($IT < 5) {
    loop = true;
} else {
    loop = false;
}
]]>
            </code>
          </script>
        </loop>
      </controlFlow>
    </task>
    <task name="Split">
      <description>
        <![CDATA[ This task defines some input, here strings to be processed. ]]>
      </description>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
result = [0:"abc", 1:"def"]
]]>
          </code>
        </script>
      </scriptExecutable>
      <controlFlow >
        <replicate>
          <script>
            <code language="groovy">
              <![CDATA[
runs=2
]]>
            </code>
          </script>
        </replicate>
      </controlFlow>
    </task>
    <task name="Process">
      <description>
        <![CDATA[ This task will be replicated according to the 'runs' value specified in the replication script.
                The replication index is used in each task's instance to select the input. ]]>
      </description>
      <depends>
        <task ref="Split"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
int replication = Integer.parseInt(System.getProperty('pas.task.replication'))
input = results[0].value()[replication]
result = input.toUpperCase()
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
    <task name="Merge">
      <description>
        <![CDATA[ As a merge operation, we simply print the results from previous tasks. ]]>
      </description>
      <depends>
        <task ref="Process"/>
      </depends>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
println results
]]>
          </code>
        </script>
      </scriptExecutable>
    </task>
  </taskFlow>
</job>